{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEaC,SAASC,cAAc,QAC/BC,iBAAiB,UA0BtB,SAAkBC,GAChBA,EAAEC,iBACF,MACEC,UACEC,OAASC,MAAOD,GAChBE,MAAQD,MAAOC,GACfC,QAAUF,MAAOE,KAEjBN,EAAEO,cAEN,IAAIC,GAAaL,EACjB,MAAMM,EAAWC,MAAMC,KAAKD,OAAOJ,IAASM,KAAI,CAACC,EAAMC,KACrDN,GAAaM,EAAIC,OAAOV,GAAQ,EArCpC,SAAuBW,EAAUb,GACTc,KAAKC,SAAW,GAE7BC,QAAQC,UAAUC,MAAK,KAC5BC,YAAW,KACT3B,EAAA4B,OAAOC,QAAQ,qBAAqBR,QAAeb,MAAW,CAC5Da,SAAU,aACVS,SAAU,OACVC,MAAO,SACP,GACDvB,EAAM,IAGJgB,QAAQQ,SAASC,OAAM,KAC5BN,YAAW,KACT3B,EAAA4B,OAAOM,QAAQ,oBAAoBb,QAAeb,MAAW,CAC3Da,SAAU,aACVS,SAAU,OACVC,MAAO,SACP,GACDvB,EAAM,G,CAkBX2B,CAAchB,EAAGN,EAAU,IAE7BW,QAAQY,WAAWtB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst form = document.querySelector('form');\nform.addEventListener('submit', onSubmit);\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return Promise.resolve().then(() => {\n      setTimeout(() => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          position: 'center-top',\n          fontSize: '20px',\n          width: '370px',\n        });\n      }, delay);\n    });\n  } else {\n    return Promise.reject().catch(() => {\n      setTimeout(() => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          position: 'center-top',\n          fontSize: '20px',\n          width: '370px',\n        });\n      }, delay);\n    });\n  }\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: {\n      delay: { value: delay },\n      step: { value: step },\n      amount: { value: amount },\n    },\n  } = e.currentTarget;\n\n  let nextDelay = +delay;\n  const promises = Array.from(Array(+amount)).map((item, i) => {\n    nextDelay += i ? Number(step) : 0;\n    createPromise(i, nextDelay);\n  });\n  Promise.allSettled(promises);\n}\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","addEventListener","e","preventDefault","elements","delay","value","step","amount","currentTarget","nextDelay","promises","Array","from","map","item","i","Number","position","Math","random","Promise","resolve","then","setTimeout","Notify","success","fontSize","width","reject","catch","failure","$47d4ff9957288465$var$createPromise","allSettled"],"version":3,"file":"03-promises.5b19520c.js.map"}